[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "redis_memory"
dynamic = ["version"]
description = "An object that persists in Redis. Works across instances and works seamlessly through magic functions."
readme = "README.md"
authors = [
    { name = "Sinan Ozel", email = "coding@sinan.slmail.me" },
]
license = { file = "LICENSE" }
dependencies = [
    "redis>=6.1.0"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",          # For running tests
    "pytest-cov>=3.0.0",      # For test coverage reporting
    "pytest-depends>=1.0.1",  # For test dependency management
    "pytest-mock>=3.14.0",    # For mocking in tests
]

dev = [
    "pytest>=7.0.0",          # For running tests
    "isort>=5.12.0",          # For import sorting
    "pytest-cov>=3.0.0",      # For test coverage reporting
    "pytest-depends>=1.0.1",  # For test dependency management
    "pytest-mock>=3.14.0",    # For mocking in tests
    "ruff>=0.12.11",          # For linting
    "yapf>=0.40.0",           # For code formatting (YAPF)
    "docformatter>=1.7.5",    # For formatting docstrings
]

[tool.ruff]
line-length = 80

[tool.yapf]
based_on_style = "pep8"
column_limit = 80
split_before_first_argument = false
dedent_closing_brackets = false

[tool.setuptools.dynamic]
version = { attr = "redis_memory.__version__" }

[project.urls]
Homepage = "https://github.com/sinan-ozel/redis-memory"
Issues = "https://github.com/sinan-ozel/redis-memory/issues"